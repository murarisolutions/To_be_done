{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\PROJECT DSC\\\\main\\\\frontend\\\\src\\\\components\\\\services\\\\DscUp\\\\dscup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DscUp = () => {\n  _s();\n  const [videoFile, setVideoFile] = useState(null);\n  const [previewURL, setPreviewURL] = useState(null);\n\n  // Handle file selection\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith(\"video/\")) {\n      setVideoFile(file);\n      setPreviewURL(URL.createObjectURL(file)); // Generate preview URL\n    } else {\n      alert(\"Please select a valid video file.\");\n    }\n  };\n\n  // Handle video upload (Placeholder for actual upload logic)\n  const handleUpload = () => {\n    if (!videoFile) {\n      alert(\"Please select a video first.\");\n      return;\n    }\n    alert(`Uploading: ${videoFile.name}`); // Replace with actual upload logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Your Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a video file to upload.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      onChange: handleFileChange,\n      style: {\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), previewURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"10px 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        width: \"300\",\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: previewURL,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        padding: \"10px 15px\",\n        backgroundColor: \"#007bff\",\n        color: \"white\",\n        border: \"none\",\n        cursor: \"pointer\",\n        fontSize: \"16px\",\n        borderRadius: \"5px\"\n      },\n      children: \"Click here to upload video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(DscUp, \"f2dbNluxFroOIjE2+9Fojum1Iy4=\");\n_c = DscUp;\nexport default DscUp;\nvar _c;\n$RefreshReg$(_c, \"DscUp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DscUp","_s","videoFile","setVideoFile","previewURL","setPreviewURL","handleFileChange","event","file","target","files","type","startsWith","URL","createObjectURL","alert","handleUpload","name","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","marginBottom","margin","width","controls","src","onClick","backgroundColor","color","border","cursor","fontSize","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/PROJECT DSC/main/frontend/src/components/services/DscUp/dscup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst DscUp = () => {\r\n  const [videoFile, setVideoFile] = useState(null);\r\n  const [previewURL, setPreviewURL] = useState(null);\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type.startsWith(\"video/\")) {\r\n      setVideoFile(file);\r\n      setPreviewURL(URL.createObjectURL(file)); // Generate preview URL\r\n    } else {\r\n      alert(\"Please select a valid video file.\");\r\n    }\r\n  };\r\n\r\n  // Handle video upload (Placeholder for actual upload logic)\r\n  const handleUpload = () => {\r\n    if (!videoFile) {\r\n      alert(\"Please select a video first.\");\r\n      return;\r\n    }\r\n    alert(`Uploading: ${videoFile.name}`); // Replace with actual upload logic\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h1>Upload Your Video</h1>\r\n      <p>Select a video file to upload.</p>\r\n\r\n      {/* File input */}\r\n      <input \r\n        type=\"file\" \r\n        accept=\"video/*\" \r\n        onChange={handleFileChange} \r\n        style={{ marginBottom: \"10px\" }} \r\n      />\r\n\r\n      {/* Preview video */}\r\n      {previewURL && (\r\n        <div style={{ margin: \"10px 0\" }}>\r\n          <video width=\"300\" controls>\r\n            <source src={previewURL} type=\"video/mp4\" />\r\n            Your browser does not support the video tag.\r\n          </video>\r\n        </div>\r\n      )}\r\n\r\n      {/* Upload button */}\r\n      <button \r\n        onClick={handleUpload} \r\n        style={{\r\n          padding: \"10px 15px\",\r\n          backgroundColor: \"#007bff\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          cursor: \"pointer\",\r\n          fontSize: \"16px\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        Click here to upload video\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DscUp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;MAC1CT,YAAY,CAACK,IAAI,CAAC;MAClBH,aAAa,CAACQ,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC,MAAM;MACLO,KAAK,CAAC,mCAAmC,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACd,SAAS,EAAE;MACda,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;IACAA,KAAK,CAAC,cAAcb,SAAS,CAACe,IAAI,EAAE,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,oBACElB,OAAA;IAAKmB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnDtB,OAAA;MAAAsB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B1B,OAAA;MAAAsB,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGrC1B,OAAA;MACEY,IAAI,EAAC,MAAM;MACXe,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAErB,gBAAiB;MAC3BY,KAAK,EAAE;QAAEU,YAAY,EAAE;MAAO;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EAGDrB,UAAU,iBACTL,OAAA;MAAKmB,KAAK,EAAE;QAAEW,MAAM,EAAE;MAAS,CAAE;MAAAR,QAAA,eAC/BtB,OAAA;QAAO+B,KAAK,EAAC,KAAK;QAACC,QAAQ;QAAAV,QAAA,gBACzBtB,OAAA;UAAQiC,GAAG,EAAE5B,UAAW;UAACO,IAAI,EAAC;QAAW;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gDAE9C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN,eAGD1B,OAAA;MACEkC,OAAO,EAAEjB,YAAa;MACtBE,KAAK,EAAE;QACLE,OAAO,EAAE,WAAW;QACpBc,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE,MAAM;QAChBC,YAAY,EAAE;MAChB,CAAE;MAAAlB,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CAhEID,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAkEX,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}